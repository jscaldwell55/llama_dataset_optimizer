# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning / AI specific
# Model files and checkpoints
*.bin
*.pt
*.pth
*.ckpt
*.safetensors
*.h5
*.pkl
*.joblib

# HuggingFace cache
.cache/
huggingface/
transformers_cache/

# Dataset files
*.jsonl
*.json
*.csv
*.tsv
*.parquet
*.arrow
*.feather
!sample_data.jsonl

# Output directories
output/
outputs/
results/
optimized_output/
optimized_*/
checkpoints/
logs/
runs/

# Tensorboard logs
tensorboard_logs/
tb_logs/

# Weights & Biases
wandb/

# MLflow
mlruns/
mlartifacts/

# Experiment tracking
.neptune/
.comet/

# GPU monitoring
nvidia-ml-py*/

# Large files
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE and editor files
.vscode/
.idea/
*.iml
*.sublime-project
*.sublime-workspace
.atom/
.brackets.json

# Local configuration files
.env.local
.env.*.local
config.local.yml
config.local.yaml
secrets.yml
secrets.yaml

# Optimization logs
optimizer_log_*.log
optimization_report_*.yaml

# Test files (keep sample data)
test_*.py
!test_*.py  # Actually, let's keep test files for now
temp_*.py
debug_*.py

# Jupyter notebook outputs
*.ipynb
!*.ipynb  # Actually keep notebooks for documentation

# Local development
dev/
development/
scratch/
tmp/

# Documentation builds
docs/build/
docs/_build/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Profiling data
*.prof
*.profile

# Memory profiling
*.mprof

# GPU profiling
*.nvprof
*.nsys-rep

# Custom ignores for this project
# Keep only essential configs, ignore custom ones
configs/custom_*.yaml
configs/temp_*.yaml
configs/test_*.yaml
!configs/test_config.yaml  # Keep the main test config

# Ignore large datasets but keep sample
data/
datasets/
raw_data/
!sample_data.jsonl

# Ignore model downloads
models/
model_cache/
pytorch_model.bin
tf_model.h5